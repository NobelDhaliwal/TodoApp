{"version":3,"sources":["Components/TodoList.jsx","App.js","index.js"],"names":["TodoList","props","className","aria-hidden","onClick","onSelect","id","text","App","useState","inputList","setInputList","items","setItems","deleteItems","console","log","preVal","filter","arrElem","index","type","placeholder","onChange","event","target","value","map","itemVal","key","ReactDOM","render","document","getElementById"],"mappings":"+KAmBeA,EAlBE,SAACC,GAId,OACI,oCACI,yBAAKC,UAAU,cAGX,uBAAGA,UAAU,cAAcC,cAAY,OACnCC,QAAS,WACLH,EAAMI,SAASJ,EAAMK,OAE7B,4BAAKL,EAAMM,SCwCZC,EApDH,WAAM,MAKkBC,mBAAS,IAL3B,mBAKTC,EALS,KAKEC,EALF,OAOUF,mBAAS,IAPnB,mBAOTG,EAPS,KAOFC,EAPE,KAsBVC,EAAc,SAACR,GACnBS,QAAQC,IAAI,WACZH,GAAS,SAACI,GACR,OAAOA,EAAOC,QAAO,SAACC,EAASC,GAC7B,OAAOA,IAAUd,SAIvB,OACE,oCACE,yBAAKJ,UAAU,YACb,yBAAKA,UAAU,cACb,6BACA,yCACA,6BACA,2BAAOmB,KAAK,OAAOC,YAAY,aAC7BC,SA5BS,SAACC,GAClBb,EAAaa,EAAMC,OAAOC,QA2BIA,MAAOhB,IAC/B,4BAAQN,QAvBC,WACfS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAmBP,OAErBC,EAAa,MAmBP,KACA,4BACGC,EAAMe,KAAI,SAACC,EAASR,GACnB,OAAO,kBAAC,EAAD,CAAUb,KAAMqB,EAASC,IAAKT,EAAOd,GAAIc,EAAOf,SAAUS,Y,MCtC/EgB,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.056db193.chunk.js","sourcesContent":["import React from \"react\";\r\nconst TodoList = (props) => {\r\n    //     const deleteItems=()=>{\r\n    // console.log(\"DELETED\");\r\n    //     };\r\n    return (\r\n        <>\r\n            <div className=\"todo_style\">\r\n                {/* Using fontawesome icon cross *.we want when we click this cross\r\n        icon item get deleted therefore we use onclick event*/}\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"\r\n                    onClick={() => {\r\n                        props.onSelect(props.id);\r\n                    }} />\r\n                <li>{props.text}</li>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\nexport default TodoList;","import React, { useState } from \"react\";\nimport TodoList from \"./Components/TodoList\";\nconst App = () => {\n  /*useState hooks returns an array of two elements one is state variable and \n  other is updated function*/\n  /*1. Here we are using two useStates 1st for input field and\n   second for button onClick event*/\n  const [inputList, setInputList] = useState(\"\");\n  //Whatever user is typing we are storing it in empty array\n  const [items, setItems] = useState([]);\n\n  //onchange event handler watches changes in input field\n  const inputEvent = (event) => {\n    setInputList(event.target.value);\n  };\n\n  //with help of preVal whatever state variable items has setItems can also acess it \n  //in our case items(state variable) have an emty array\n  const itemlist = () => {\n    setItems((preVal) => {\n      return [...preVal, inputList];\n    });\n    setInputList(\"\");\n  };\n  const deleteItems = (id) => {\n    console.log(\"DELETED\");\n    setItems((preVal) => {\n      return preVal.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n  return (\n    <>\n      <div className=\"main_div\">\n        <div className=\"center_div\">\n          <br />\n          <h1>Todo List</h1>\n          <br />\n          <input type=\"text\" placeholder=\"Add a Item\"\n            onChange={inputEvent} value={inputList}></input>\n          <button onClick={itemlist}>+</button>\n          <ol>\n            {items.map((itemVal, index) => {\n              return <TodoList text={itemVal} key={index} id={index} onSelect={deleteItems} />\n            })\n            }\n          </ol>\n\n        </div>\n      </div>\n    </>\n  )\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport\"./App.css\";\n\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}